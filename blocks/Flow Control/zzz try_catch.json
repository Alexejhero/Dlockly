{
  "restrictions": [
    {
      "type": "custom",
      "message": "The 'try/catch' block may not be used inside another 'try/catch' block.",
      "code": "block = block.getSurroundParent(); while (block) { if (block.type == 'try_catch') _return = false; block = block.getSurroundParent(); }"
    },
    {
      "type": "!toplevelparent",
      "message": "The 'try/catch' block may not be used inside the 'on error' event.",
      "types": [
        "on_error"
      ]
    }
  ],
  "type": "try_catch",
  "message0": "try %1 %2 catch %3 %4",
  "args0": [
    {
      "type": "input_dummy"
    },
    {
      "type": "input_statement",
      "name": "try"
    },
    {
      "type": "input_dummy"
    },
    {
      "type": "input_statement",
      "name": "catch"
    }
  ],
  "colour": "#A00000",
  "tooltip": "If the code in the try block throws an error, it is caught in the catch block",
  "previousStatement": null,
  "nextStatement": null,
  "helpUrl": "",
  "generator": "_return = 'try { ' + Blockly.JavaScript.statementToCode(block, 'try') + '} catch (error) { ' + Blockly.JavaScript.statementToCode(block, 'catch') + ' }'",
  "category": "Flow Control"
}